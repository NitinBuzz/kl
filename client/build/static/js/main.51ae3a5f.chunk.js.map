{"version":3,"sources":["components/Channels.js","components/Send.js","components/Live.js","components/Chatter.js","index.js"],"names":["Channels","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","channel","selectChannel","renderChannelList","state","channels","map","item","react_default","a","createElement","key","className","onClick","e","renderChannels","render","Fragment","Component","Send","handleUpdate","setState","msg","toString","trim","renderSend","onSubmit","preventDefault","length","sendMessage","type","required","placeholder","value","minLength","onChange","target","Live","renderLive","messages","_ref","from","scrollToBottom","messagesContainer","ReactDOM","findDOMNode","scrollTop","scrollHeight","_this2","ref","el","components_Send","socket","Chatter","initClientJoin","on","message","updateLive","emit","name","room","axios","post","then","response","data","channelToSwitch","oldChannel","text","console","log","newOne","messagesX","push","closeModal","showModel","renderModal","localStorage","setItem","shouldRender","getItem","autocomplete","socketIOClient","endpoint","components_Channels","components_Live","rootElement","document","getElementById","components_Chatter"],"mappings":"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","file":"static/js/main.51ae3a5f.chunk.js","sourcesContent":["// import packages\nimport React, { Component } from \"react\";\n\nclass Channels extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channels : ['GENERAL', 'FED', 'CL', 'TRANSPORT', 'CONVO `19',]\n    }\n    \n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  handleClick = channel => {\n    this.props.selectChannel(channel);\n  };\n\nrenderChannelList = () => {\n let list = this.state.channels.map((item) => {\n    return <div key={item} className=\"channel-name\" onClick={e => this.handleClick(item)}><span className=\"channel-hash\">#</span><span className=\"channel-text\">{item}</span></div>\n   });\n  return list;\n}\n\n  renderChannels = () => {\n    if (this.props.render) {\n      return (\n        <div className=\"channelList\">\n          <div className=\"channels-head\">Channels</div>\n             {this.renderChannelList()}\n        </div>\n      );\n    } else {\n      return <React.Fragment />\n    }\n  };\n\n  render() {\n    return <div>{this.renderChannels()}</div>;\n  }\n}\n\nexport default Channels;\n","// import packages\nimport React, { Component } from \"react\";\n\nclass Send extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  componentWillUnmount() {}\n\n  handleUpdate = e => {\n    this.setState({ msg: e.toString().trim() });\n  };\n\n  renderSend = () => {\n    if (this.props.render) {\n      return (\n        <div className=\"form\">\n        <div className=\"hrx\" />\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              if (this.state.msg.trim().length > 1){\n               this.props.sendMessage(this.state.msg);\n               this.setState({ msg: ''})\n              } else {\n                this.setState({ msg: ''})\n              }\n\n          // post msg to group\n            }}\n          >\n            <input\n              className=\"message-input\"\n              type=\"text\"\n              required\n              placeholder=\"Message\"\n              value={this.state.msg}\n              minLength={2}\n              onChange={e => {\n                this.handleUpdate(e.target.value);\n              }}\n            />\n          </form>\n        </div>\n      );\n    } else {\n      return <React.Fragment />\n    }\n  };\n\n  render() {\n    return <div className=\"\">{this.renderSend()}</div>;\n  }\n}\n\nexport default Send;\n","// import packages\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Send from \"./Send\";\n\nclass Live extends Component {\n  constructor(props) {\n    super(props);\n   \n  }\n  \ncomponentDidMount() {\n     this.scrollToBottom();\n}\n\ncomponentDidUpdate() {\n     this.scrollToBottom();\n}\n  \n  scrollToBottom() {\n    const messagesContainer = ReactDOM.findDOMNode(this.messagesContainer);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n\n\n  renderLive = () => {\n     if (this.props.render) {\n      return this.props.messages.map(({from, msg}) => {\n        return (<div><div key={from+msg} className=\"message\"><span className=\"message-from\">{from}:</span> <p className=\"message-text\">{msg}</p></div><div className=\"hrx-xs\"/></div>)\n      })\n    } else {\n      return <React.Fragment />\n    }\n  };\n\n  render() {\n//     console.log(this.props.channel);\n    return (\n      <div className=\"liveContainer\">\n        <div ref={(el) => { this.messagesContainer = el; }} className=\"live-chatbox\">{this.renderLive()}</div>\n        <Send render={this.props.render} sendMessage = {this.props.sendMessage}/>\n      </div>\n    );\n  }\n}\n\nexport default Live;\n","// import packages\nimport React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\nimport Channels from \"./Channels\";\nimport Live from \"./Live\";\n\nlet socket = {};\nclass Chatter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: \"GENERAL\",\n      oldChannel: \"\",\n      messages: [],\n      shouldRender: false,\n      name: '',\n      showModel: false,\n    };\n  }\n\n  componentDidMount() {\n    socket = socketIOClient(this.props.endpoint);\n      if(localStorage.getItem('x-name')) {\n        \n        this.setState({ name: localStorage.getItem('x-name')}, () => {\n          this.setState({ shouldRender: true }, () => {\n            this.initClientJoin();\n          });\n        });\n      } else {\n        this.setState({ showModel: true});\n      }\n  }\n  \n  initClientJoin = () => {\n//     socket = socketIOClient(this.props.endpoint);\n    socket.on('newMessage', message =>  {\n      this.updateLive(message);\n    }); \n    socket.emit('join', {name: this.state.name, room: this.state.channel}); \n    axios.post(\"/getRecords\" , {room: this.state.channel}).then(response => {\n//       console.log(`resp --- ${JSON.stringify(response.data)}`);\n       this.setState({messages: response.data})\n     });\n  }\n\n  componentWillUnmount() {\n//     console.log(\"unmount\");\n    if (socket && socket.emit) {\n      socket.emit(\"disconnect\");\n    }\n  }\n\n  selectChannel = channelToSwitch => {\n    if (this.state.channel !== channelToSwitch) {\n        this.setState({ oldChannel : this.state.channel }, () => {\n          this.setState({ channel: channelToSwitch }, () => {\n            this.initClientJoin();\n          });\n      });\n      \n    }\n  };\n\n  sendMessage = (text) => {\n    console.log(text)\n    socket.emit('createMessage', {room:this.state.channel ,from: this.state.name, msg: text})\n  }\n  \n  updateLive = (newOne) => {\n    let messagesX = this.state.messages;\n    messagesX.push(newOne);\n    this.setState({\n      messages: messagesX\n    })\n  }\n  \n   closeModal = () => {\n    this.setState({\n      showModel: false,\n      name: ''\n    });\n  }\n  \n   renderModal = () => {\n    return (\n      <div className=\"modal\">\n        <div className=\"modal-content\">\n          <span\n            className=\"close\"\n            onClick={() => {\n              this.closeModal();\n            }}\n          >\n            &times;\n          </span>\n          <p>Provide Your Name</p>\n          <form\n            onSubmit={e => {\n              e.preventDefault();\n              if (this.state.name.length > 3) {\n                 localStorage.setItem('x-name', this.state.name);\n                 this.closeModal();\n                 this.setState({ shouldRender: true, name: localStorage.getItem('x-name')}, () => {\n                  this.initClientJoin();\n                }) \n              }\n            }}\n          >\n            Name:\n            <br />\n            <input\n              type=\"text\"\n              name=\"name\"\n              minLength={4}\n              required\n              onChange={e => {this.setState({name: e.target.value.trim()})}}\n              autocomplete=\"off\"\n              value={this.state.name}\n            />\n            <br /> <br />\n            <input className=\"button\" type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"\">\n        {this.state.showModel && this.renderModal()}\n        <div className=\"chatterContainer\">\n          <Channels render={this.state.shouldRender} selectChannel={this.selectChannel} />\n          <Live render={this.state.shouldRender} messages={this.state.messages} channel={this.state.channel} updateLive={this.updateLive} sendMessage={this.sendMessage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Chatter;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Chatter from \"./components/Chatter\";\n\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n    <p className=\"top-text\">This is KLU World Wide Chat App.</p>\n    <p className=\"top-right-text\">No Spam || Save important data, chat will be flushed soon.</p>\n      <div className=\"AppTitle\">\n        <h2 className=\"index-title\">I'm Mr. KLU World Wide</h2>\n      </div>\n      <div>\n        <Chatter endpoint=\"http://142.93.215.49:5000\" />\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}